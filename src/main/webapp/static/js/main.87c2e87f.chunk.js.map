{"version":3,"sources":["settings.js","components/loginFacade.js","components/LogIn.js","components/Data.js","components/Home.js","App.js","index.js"],"names":["URL","handleHttpErrors","res","ok","json","Promise","reject","status","fullError","facade","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","console","log","logout","removeItem","login","user","pass","options","makeOptions","username","password","fetch","then","catch","err","getRole","jwtData","split","decodedJwtJsonData","window","atob","JSON","parse","roles","fetchSW","fetchData","method","addToken","body","opts","headers","this","stringify","LogIn","props","useState","setUser","setPass","onClick","evt","preventDefault","onChange","target","id","value","placeholder","Data","starwars","setStarwars","useEffect","a","data","getData","map","key","uuid","name","url","Home","href","alt","src","Header","className","exact","activeClassName","to","NoMatch","App","setLoggedIn","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87c2e87f.chunk.js","sourcesContent":["const URL = \"https://sandersolutions.dk/testexamexercise1\";\n// const URL = \"http://localhost:8080/testexamexercise1\";\n\nexport default URL;","import URL from \"../settings\";\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({ status: res.status, fullError: res.json() });\n  }\n  return res.json();\n}\n\nclass LoginFacade {\n  setToken = token => {\n    localStorage.setItem(\"jwtToken\", token);\n  };\n  getToken = () => {\n    return localStorage.getItem(\"jwtToken\");\n  };\n  loggedIn = () => {\n    console.log(\"loggedIn func\");\n    const loggedIn = this.getToken() != null;\n    return loggedIn;\n  };\n  logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n  };\n  login = (user, pass) => {\n    console.log(\"user, pass\", user, pass)\n    const options = this.makeOptions(\"POST\", true, {\n      username: user,\n      password: pass\n    });\n    console.log(\"URL\", URL);\n    console.log(\"options\", options);\n    return fetch(URL + \"/api/login\", options)\n      .then(handleHttpErrors)\n      .then(res => {\n        this.setToken(res.token);\n      })\n      .catch(err => { throw err });\n  };\n\n  getRole = () => {\n    let jwt = localStorage.getItem(\"jwtToken\");\n    let jwtData = jwt.split(\".\")[1];\n    let decodedJwtJsonData = window.atob(jwtData);\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\n    return decodedJwtData.roles;\n  };\n\n  makeOptions(method, addToken, body) {\n    console.log(\"makeOptions\");\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': \"application/json\"\n      }\n    };\n    if (addToken && this.loggedIn()) {\n      opts.headers[\"x-access-token\"] = this.getToken();\n    }\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n    console.log(\"opts\", opts);\n    return opts;\n  }\n\n  fetchSW = () => {\n    console.log(\"fetchSW\");\n    const options = this.makeOptions(\"GET\", true); //True add's the token\n    return fetch(URL + \"/api/sw/datadto\", options).then(handleHttpErrors);\n  }\n\n  fetchData = () => {\n    console.log(\"fetchData\");\n    const options = this.makeOptions(\"GET\", true); //True add's the token\n    if (this.getRole() === \"admin\") {\n      return fetch(URL + \"/api/info/admin\", options).then(handleHttpErrors);\n    } else {\n      return fetch(URL + \"/api/info/user\", options).then(handleHttpErrors);\n    }\n  };\n\n}\nconst facade = new LoginFacade();\nexport default facade;\n","import React, { useState } from \"react\";\n\nfunction LogIn(props) {\n  console.log(\"LogIn\");\n  const [user, setUser] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  console.log(\"user, pass\", user, pass)\n\n  const login = (evt) => {\n    console.log(\"LogIn - login\");\n    evt.preventDefault();\n    console.log(\"user, pass\", user, pass)\n    props.login(user, pass);\n  };\n\n  const logout = (evt) => {\n    console.log(\"LogIn - logout\");\n    evt.preventDefault();\n    props.logout();\n  };\n\n  const onChange = evt => {\n    console.log(\"onChange  ->\", evt.target.id);\n    if ([evt.target.id] == \"username\") {\n      console.log(\"username\", evt.target.value);\n      setUser(evt.target.value);\n    } else {\n      console.log(\"password\", evt.target.value);\n      setPass(evt.target.value);\n    }\n  };\n\n  if (!props.loggedIn) {\n    return (\n      <div>\n        <h2>Login</h2>\n        <form onChange={onChange}>\n          <input placeholder=\"User Name\" id=\"username\" />\n          <input placeholder=\"Password\" id=\"password\" />\n          <button onClick={login}>Login</button>\n        </form>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h2>Logout</h2>\n        <button onClick={logout}>Logout</button>\n      </div>\n    );\n  }\n}\nexport default LogIn;","import React, { useState, useEffect } from \"react\";\nimport facade from \"./loginFacade\";\nimport uuid from \"uuid/v1\";\n\nfunction Data({ loggedIn }) {\n    console.log(\"Data\");\n    console.log(\"loggedIn\", loggedIn);\n    const [starwars, setStarwars] = useState([]);\n\n    useEffect(() => {\n        if (loggedIn) {\n            const getData = async () => {\n                try {\n                    const data = await facade.fetchSW();\n                    console.log(\"data\", data);\n                    setStarwars(data);\n                } catch (e) {\n                    console.log(\"err\", e);\n                }\n            };\n            getData();\n        }\n    }, []);\n\n    console.log(\"starwars\", starwars);\n    if (loggedIn) {\n        return (\n            <div>\n                <table>\n                    <thead><tr><td><b>Name</b></td><td><b>URL</b></td></tr></thead>\n                    <tbody>\n                        {starwars.map((data) => (\n                            <tr key={uuid()}>\n                                <td>{data.name}</td>\n                                <td>{data.url}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div >\n        )\n    } else {\n        return (\n            <div>\n                <h2> Please login</h2>\n            </div >\n        )\n    }\n}\nexport default Data;","import React from \"react\";\n\nfunction Home() {\n    console.log(\"Home\");\n    return (\n        <div>\n            <p>Master<br />\n                <a href=\"https://travis-ci.org/cph-ms782/Course-Assignment-3_Backend\"><img alt=\"Build Status\" src=\"https://travis-ci.org/cph-ms782/Course-Assignment-3_Backend.svg?branch=master\" /></a>  </p>\n            <p>Dev<br />\n                <a href=\"https://travis-ci.org/cph-ms782/Course-Assignment-3_Backend\"><img alt=\"Build Status\" src=\"https://travis-ci.org/cph-ms782/Course-Assignment-3_Backend.svg?branch=dev\" /></a>  </p>\n            <h1>Course-Assignment-3</h1>\n            <h3>endpoints</h3>\n            <p><strong>All</strong>  </p>\n            <ul>\n                <li>/api/info  </li>\n                <li>/api/info/all  </li>\n                <li>/api/sw  </li>\n                <li>/api/login  </li>\n            </ul>\n            <p><strong>User</strong>  </p>\n            <ul>\n                <li>/api/sw/data  </li>\n                <li>/api/info/user  </li>\n            </ul>\n            <p><strong>Admin</strong>  </p>\n            <ul>\n                <li>/api/sw/data  </li>\n                <li>/api/info/user  </li>\n                <li>/api/info/admin  </li>\n                <li>/api/info/fill  </li>\n            </ul>\n            <hr />\n            <h1>Backend</h1>\n            <h2>Nedenstående er en minimalistisk guide til opsætning i forbindelse med deployment igennem travis.</h2>\n            <ol>\n                <li>\n                    <p>MySql\n    opret lokal(xxx + xxx_test) og droplet(xxx) database.</p>\n                </li>\n                <li>\n                    <p>Netbeans Backend Projekt. (Project Files -&gt; pom.xml).\n                        kontrollér pom.xml linie 18(remote.server).\n    Husk at kontrollér at der bruges https og ikke http.</p>\n                </li>\n                <li>\n                    <p>Netbeans Backend Projekt.\n                    (Source packages -&gt; utils -&gt; EMF_Creator.java)\n    sørg for at connection i EMF_Creator linie 121  \"CONNECTION\" er unik.</p>\n                </li>\n                <li>\n                    <p>Droplet(Terminal/GitBash)\n    ssh ind i dropletten, og brug</p>\n                    <ul>\n                        <li>sudo nano /opt/tomcat/bin/setenv.sh -\nopret ny export med værdien fra \"CONNECTION\" i step 3.</li>\n                    </ul>\n                </li>\n                <li>\n                    <p>Netbeans Backend Projekt\n                    (Other sources -&gt; src/main/resources -&gt; default package -&gt; config.properties)\n    kontrollér database navne i config.properties.</p>\n                </li>\n                <li>\n                    <p>Travis.yml fil i rod mappen.\n    Ændre database navn i linie 40(CREATE DATABASE ??) til database navnet valgt i step 1.</p>\n                </li>\n                <li>\n                    <p>https://travis-ci.org/\n    på travis sæt REMOTE_USER til \"script_user\" og REMOTE_PW til script_user's password.</p>\n                    <p>-- brug følgende kommando for at finde password til brugeren hvis nødvendigt.\nsudo nano /opt/tomcat/conf/tomcat-users.xml</p>\n                </li>\n            </ol>\n            <p>HUSK AT CLEAN AND BUILD HVIS DER ER ERRORS I IMPORTS.</p>\n            <hr />\n            <h1>Frontend</h1>\n            <p>This is a client for login in or out of REST endpoint and for fetching data when logged in.<br />\n                Set REST endpoint URL in file <strong>src/settings.js</strong>  </p>\n            <h2>Deployment instructions</h2>\n            <p>First clone project.<br />\n                In cloned folder using a terminal enter:  </p>\n            <h4><code>npm install</code></h4>\n            <p>and</p>\n            <h4><code>npm install react-router-dom</code></h4>\n            <p>to install prerequisites</p>\n            <p>When all is ready to deploy:</p>\n            <h4><code>npm run build</code></h4>\n            <h2>Deploy via Surge</h2>\n            <p>1\nI et færdigt react projekt kan man vælge at deploye via surge. Det foregår alt sammen via terminalen(git bash). For at komme i gang, skal man navigere til roden af selve ens projekt. Højre klik i din projektfolder og find \"git bash here\". I terminalen skal du skrive \"npm run build\" (uden citationstegn), hvilket opretter en build mappe, lidt ligesom når man i Java får en target folder, efter man har builded. </p>\n            <p>2\n            Hvis man ikke tidligere har benyttet sig af surge, så skal man igen i en terminal (git bash) skrive “npm install -g surge” (uden citationstegn). Det installerer interfacet man skal br /uge for at hoste via surge.\nDernæst skal man skrive  </p>\n            <h4><code>surge --project ./build --domain DITDOMÆNENAVN.surge.sh</code></h4>\n            <p>Man skal IKKE skrive hverken .dk eller .com, da .surge.sh er et topdomæne. DITDOMÆNENAVN skal erstattes af hvad du gerne vil have som navn på dit projekt.\nHvis du ikke har benyttet dig af Surge før, vil du blive promptet til at indtaste først en email og dernæst et password. I nogle terminaler er der IKKE noget grafisk der fortæller dig at det er det du skal. </p>\n            <p>Sådan her ser det f.eks. ud i git bash. </p>\n            <p>Her skal man bare indtaste email først og så trykke enter. Dernæst er det tid til et password og så enter.\nDet vil se sådan her ud hvis det er lykkedes </p>\n            <p>Du kan herefter tilgå dit react projekt via DITDOMÆNENAVN.surge.sh</p>\n        </div>\n    )\n}\n\nexport default Home;","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\nimport facade from \"./components/loginFacade\";\nimport LogIn from \"./components/LogIn\";\nimport Data from \"./components/Data\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  console.log(\"App\");\n  const token = localStorage.getItem(\"jwtToken\");\n  const [loggedIn, setLoggedIn] = useState(token ? true : false);\n\n  const logout = () => {\n    console.log(\"App - logout\");\n    facade.logout();\n    setLoggedIn(false);\n    console.log(\"loggedIn\", loggedIn);\n  };\n  const login = (user, pass) => {\n    console.log(\"App - login\");\n    facade.login(user, pass).then(res => setLoggedIn(true));\n    console.log(\"loggedIn\", loggedIn);\n  };\n  return (\n    <div>\n      <Router >\n        <div>\n          <Header loggedIn={loggedIn} />\n          <Switch>\n            <Route exact path=\"/\"><Home /></Route>\n            <Route path=\"/data\"><Data loggedIn={loggedIn} /></Route>\n            <Route path=\"/log\"><LogIn\n              facade={facade}\n              loggedIn={loggedIn}\n              login={login}\n              logout={logout}\n            /></Route>\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nfunction Header({ loggedIn }) {\n  console.log(\"Header\");\n  return (\n    <div>\n      <ul className=\"header\">\n        <li><NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink></li>\n        <li><NavLink activeClassName=\"active\" to=\"/data\">Data</NavLink></li>\n        <li><NavLink activeClassName=\"active\" to=\"/log\">{loggedIn ? <div>Logout</div> : <div>Login</div>}</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nfunction NoMatch() {\n  console.log(\"NoMatch\");\n  return (\n    <div>\n      hello NoMatch\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}