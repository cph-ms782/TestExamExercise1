{"version":3,"sources":["settings.js","components/FillDB.js","components/EmptyDB.js","components/Person.js","App.js","apiFacade.js","index.js"],"names":["URL","FillDB","console","log","EmptyDB","Person","className","exact","path","MenuBar","activeClassName","to","App","apiFacade","savedChosenTeam","localStorage","getItem","savedCrestURL","useState","useEffect","type","name","id","aria-hidden","makeOptions","method","body","opts","headers","JSON","stringify","handleHttpErrors","res","ok","json","Promise","reject","status","fullError","getData","url","resolve","fetch","then","data","catch","bind","getDataAsync","a","async","addEditPerson","person","undefined","options","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1afc6c08.chunk.js","sourcesContent":["// const URL = \"https://sandersolutions.dk/testexamexercise1\";\nconst URL = \"http://localhost:8080/testexamexercise1\";\n\nexport default URL;","import React, { } from \"react\";\n\nfunction FillDB({  }) {\n    console.log(\"FillDB\");\n    // console.log(\"airports\", airports);\n\n    return (\n        <div>\n            <h2>FillDB</h2>\n        </div>\n    )\n\n}\n\nexport default FillDB;","import React, { } from \"react\";\n\nfunction EmptyDB({  }) {\n    console.log(\"EmptyDB\");\n    // console.log(\"airports\", airports);\n\n    return (\n        <div>\n            <h2>EmptyDB</h2>\n        </div>\n    )\n\n}\n\nexport default EmptyDB;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport FillDB from \"./FillDB.js\";\nimport EmptyDB from \"./EmptyDB.js\";\n\nfunction Person({\n}) {\n  console.log(\"Person\");\n  return (\n    <div>\n      <Router>\n        <div className=\"newsContainer\">\n          <div className=\"newsContent\">\n            <Switch>\n              <Route exact path=\"/fill\">\n                <FillDB />\n              </Route>\n              <Route exact path=\"/empty\">\n                <EmptyDB />\n              </Route>\n              {/* <Route>\n                <NoMatch />\n              </Route> */}\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default Person;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, NavLink } from \"react-router-dom\";\n// import loginFacade from \"./components/loginFacade\";\nimport URL from \"./settings\";\nimport Person from \"./components/Person.js\";\n\nfunction App({ apiFacade }) {\n  console.log(\"App\");\n  const savedChosenTeam = localStorage.getItem(\"chosenTeam\");\n  const savedCrestURL = localStorage.getItem(\"chosenTeamCrestUrl\");\n\n  const [airports, setAirports] = useState([]);\n  const [chosenTeam, setChosenTeam] = useState(savedChosenTeam ? savedChosenTeam : \"\");\n  const [crestURL, setCrestURL] = useState(savedCrestURL ? savedCrestURL : \"\");\n  const [flightDate, setFlightDate] = useState(\"\");               //useState(\"12/02/2019\");\n\n  // const savedTeamMatches = localStorage.getItem(\"chosenTeamMatches\");\n  // const [teamMatches, setTeamMatches] = useState(savedTeamMatches ? savedTeamMatches : []);\n\n  // const savedTeamDates = localStorage.getItem(\"chosenTeamDates\");\n  // const [teamDates, setTeamDates] = useState(savedTeamDates ? savedTeamDates : []);\n\n\n  // const updateChosenTeam = index => {\n  //   console.log(\"updateChosenTeam - index\", index);\n  //   setChosenTeam(index);\n  // };\n  // const updateTeamPlayers = index => {\n  //   console.log(\"updateTeamPlayers - index\", index);\n  //   setTeamPlayers(index);\n  // };\n\n  function handleHttpErrors(res) {\n    if (!res.ok) {\n      return Promise.reject({ status: res.status, fullError: res.json() });\n    }\n    return res.json();\n  }\n\n  useEffect(\n    () => {\n      console.log(\"useEffect\");\n\n      console.log(\"App useEffect standings\");\n      let urlStandings = URL + \"/api/fb/standings\";\n      console.log(\"App useEffect - urlStandings\", urlStandings);\n\n      // fetch(urlStandings)\n      //   .then(handleHttpErrors)\n      //   .then(standingsData => {\n      //     console.log(\"App useEffect standings - fetch - urlStandings - standingsData\", standingsData);\n      //     setStandings(standingsData);\n      //   })\n      //   .catch(console.log.bind(console));\n\n      // console.log(\"App useEffect teams\");\n      // let urlTeam = URL + \"/api/fb/teams\";\n      // console.log(\"App - useEffect - urlTeam\", urlTeam);\n      // fetch(urlTeam)\n      //   .then(handleHttpErrors)\n      //   .then(data => {\n      //     console.log(\"App  useEffect - fetch - urlTeam - data\", data);\n      //     setTeams(data.sort((a, b) => a.name.localeCompare(b.name)));\n      //   })\n      //   .catch(console.log.bind(console));\n\n    },\n    [],\n    apiFacade\n  );\n\n  // console.log(\"teamName\", teamName);\n  return (\n    <div>\n      <Router>\n        <div>\n          <div className=\"container\">\n            <button type=\"button\" name=\"daynight\" id=\"daynight\">\n              <i className=\"fa fa-sun-o\" aria-hidden=\"true\" id=\"sun\"></i>\n              <i className=\"fa fa-moon-o\" aria-hidden=\"true\" id=\"moon\"></i>\n            </button>\n            <div id=\"top-content\">\n              {/* <Search\n              /> */}\n            </div>\n          </div>\n\n          <div className=\"container\">\n            <div id=\"header\">\n              <div id=\"logo\">\n                {/* <img alt=\"icon\" src={require(\"./images/BDlogo_150px.png\")} /> */}\n              </div>\n              <div id=\"banner\">\n                {/* <img src={require(\"./images/banner_marple.png\")}\n                  style={{ 'height': \"100%\" }}\n                  alt=\"banner\"\n                /> */}\n              </div>\n            </div>\n          </div>\n          <div className=\"container\">\n            <div id=\"menubar\">\n              <MenuBar />\n            </div>\n          </div>\n          <div className=\"container\">\n            <div id=\"newsticker\">\n              {/* <NewsTicker\n              /> */}\n            </div>\n          </div>\n\n          <div className=\"container\">\n            <div id=\"cont-1\">\n              <div id=\"team\">\n                {/* <TeamCrest\n                /> */}\n              </div>\n              <div id=\"userinfo\">\n                {/* <UserInfo\n                /> */}\n              </div>\n            </div>\n            <div id=\"cont-2\">\n              <div id=\"part-1\">\n                {/* <div id=\"map\"><Map /></div> */}\n                <div id=\"nextmatch\">\n                  {/* <NextMatch\n                    teamDates={teamDates} */}\n                  /></div>\n                <div id=\"buy\">\n                  {/* <Buy\n                  /> */}\n                </div>\n              </div>\n              <div id=\"news\">\n                <Person\n                />\n              </div>\n            </div>\n            <div id=\"cont-3\">\n              <div id=\"leaderboard\">\n                {/* <Leaderboard\n                /> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nfunction MenuBar() {\n  console.log(\"MenuBar\");\n  return (\n    <div>\n      <ul className=\"header\">\n        <li>\n          <NavLink exact activeClassName=\"active\" to=\"/\">\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact activeClassName=\"active\" to=\"/fill\">\n            Fill DB\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact activeClassName=\"active\" to=\"/empty\">\n            Empty DB\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import URL from \"./settings\";\n\n//The two methods below, are the utility-methods introduced here (use them if you like):\n//https://docs.google.com/document/d/1hF9P65v_AJKCjol_gFkm3oZ1eVTuOKc15V6pcb3iFa8/edit?usp=sharing\n\nfunction makeOptions(method, body) {\n  var opts = {\n    method: method,\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  if (body) {\n    opts.body = JSON.stringify(body);\n  }\n  return opts;\n}\n\n// function makeOptionsCORS(method) {\n//   var opts = {\n//     method: method,\n//     headers: {\n//       \"Access-Control-Request-Method\": URL,\n//       \"Access-Control-Request-Headers\": \"Content-Length,API-Key\"\n//     }\n//   };\n//   return opts;\n// }\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({ status: res.status, fullError: res.json() });\n  }\n  return res.json();\n}\n\nfunction apiFacade() {\n\n  //OBSERVE This returns a promise, NOT the actual data, you must handle asynchronicity by the client\n  // async function getData() {\n  //   const options = makeOptionsCORS(\"OPTIONS\");\n  //   const data = await fetch(URL, options).then(handleHttpErrors);\n  //   return data;\n  // }\n  function getData(url) {\n    console.log(\"apiFacade - getData\");\n    const data = Promise.resolve(fetch(url))\n      .then(handleHttpErrors)\n      .then(data => {\n        console.log(\"apifacade - getData data\", data);\n        return data;\n      })\n      .catch(console.log.bind(console));\n    return data;\n  }\n\n  async function getDataAsync(url) {\n    console.log(\"apiFacade - getDataAsync\");\n    const data = await fetch(url)\n      .then(handleHttpErrors)\n      .then(data => {\n        console.log(\"apiFacade - getDataAsync - data\", data);\n        return data;\n      })\n      .catch(console.log.bind(console));\n    console.log(\"apiFacade - getDataAsync - data\", data);\n    return data;\n  }\n\n  // function getData(url) {\n  //   console.log(\"apiFacade - getData\");\n  //   const data = fetch(url)\n  //     .then(res => res.json())\n  //     .then(dat => {\n  //       console.log(\"apiFacade - getData - dat\", dat);\n  //       return dat;\n  //     });\n  //   console.log(\"apiFacade - getData - data\", data);\n  //   return data;\n  // }\n\n  // async function getDataAsync(url) {\n  //   console.log(\"apiFacade - getData\");\n  //   const data = await fetch(url).then(handleHttpErrors);\n  //   console.log(\"apiFacade - getDataAsync - data\", data);\n  //   return data;\n  // }\n\n  async function addEditPerson(person) {\n    if (person.id === undefined) {\n      const options = makeOptions(\"POST\", person);\n      const data = await fetch(URL, options).then(handleHttpErrors);\n      return data;\n    } else {\n      const options = makeOptions(\"PUT\", person);\n      const data = await fetch(URL + \"/\" + person.id, options).then(handleHttpErrors);\n      return data;\n    }\n  }\n\n  async function deletePerson(id) {\n    const options = makeOptions(\"DELETE\");\n    const data = await fetch(URL + \"/\" + id, options).then(handleHttpErrors);\n    return data;\n  }\n\n  return {\n    getData,\n    getDataAsync,\n    addEditPerson,\n    deletePerson\n  };\n}\n\nexport default apiFacade();\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport './style.css';\nimport App from './App';\nimport apiFacade from \"./apiFacade\";\n\nReactDOM.render(<App apiFacade={apiFacade} />, document.getElementById('root'));\n"],"sourceRoot":""}